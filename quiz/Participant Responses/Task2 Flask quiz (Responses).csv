Column 13,1. What type of software is Task2 primarily designed to help developers build? (Single Choice),2. What are the key components of this codebase? (Choose all that apply),"3. What is the role of the App component (i.e., location of app.py) in this codebase? (Choose all that apply)",4. Which description is correct for the APP core component and its relationship with other components in this codebase? (Choose all that apply),5. What is the relationship between the App Module and the Config Module in this codebase? (Choose all that apply),6. What is the role of the Blueprint Module in this codebase? (Choose all that apply),7. What is the relationship between the App Module and the Blueprint Module in this codebase? (Choose all that apply),8. What is the purpose of  register() to Blueprint Module? (Choose all that apply),"9. Under the Blueprint module, what is the purpose of get_send_file_max_age() in this codebase? (Choose all that apply)"
P1,"b. Web applications and APIs (e.g., personal portfolio website)","a. JSON Handling, b. Blueprints, g. Sansio",g. I don’t know.,e. I don’t know,"a. The Config Module provides configuration settings that the App Module uses to manage the application’s behavior., b. The App Module automatically loads configuration settings from the Config Module., c. The Config Module is required to initialize the App Module., d. The App Module uses the config object to access application-specific settings, such as DEBUG or SECRET_KEY., e. The Config Module provides environment-based configurations that can be loaded into the App Module.",f. To enhance security by validating incoming requests.,e. The App Module depends on the Blueprint Module for basic request and response handling.,"d. To register extensions, such as SQLAlchemy or Flask-Migrate, within the Blueprint.","a. To determine the maximum age (in seconds) for static files before they are cached., c. To customize the cache duration for static files specific to a Blueprint."
P2,"b. Web applications and APIs (e.g., personal portfolio website)","a. JSON Handling, b. Blueprints, c. Config, g. Sansio","b. To define the database schema and relationships for the application., c. To configure the Flask application, initialize routes, and start the server., d. To act as the central entry point for the application.","b. The APP core uses Sans-I/O to handle HTTP request routing and responses., d. The APP core provides the foundation for CLI commands to interact with application configurations.","a. The Config Module provides configuration settings that the App Module uses to manage the application’s behavior., c. The Config Module is required to initialize the App Module., d. The App Module uses the config object to access application-specific settings, such as DEBUG or SECRET_KEY.","b. To enable modular organization of application functionality, such as routes and templates., e. To enable developers to define and group related routes and views.","b. The Blueprint Module allows the App Module to organize application functionality into smaller, modular components., d. The App Module can register multiple Blueprints to handle different routes and functionality.","a. To add the Blueprint's routes and resources to the main Flask application., e. To associate static files and templates specific to the Blueprint with the application.","a. To determine the maximum age (in seconds) for static files before they are cached., b. To set a global cache-control header for all static files served by the application."
P3,"b. Web applications and APIs (e.g., personal portfolio website)","b. Blueprints, c. Config, e. Middleware, f. HTTP, g. Sansio","c. To configure the Flask application, initialize routes, and start the server., d. To act as the central entry point for the application., e. To validate request and response objects using middleware.","b. The APP core uses Sans-I/O to handle HTTP request routing and responses., d. The APP core provides the foundation for CLI commands to interact with application configurations.","b. The App Module automatically loads configuration settings from the Config Module., f. The App Module depends on the Config Module to define all middleware used in the application.","d. To allow reusable components to be shared across multiple applications., e. To enable developers to define and group related routes and views.","b. The Blueprint Module allows the App Module to organize application functionality into smaller, modular components.","a. To add the Blueprint's routes and resources to the main Flask application., c. To connect the Blueprint to the App Module, allowing its functionality to be integrated into the application., e. To associate static files and templates specific to the Blueprint with the application.",a. To determine the maximum age (in seconds) for static files before they are cached.
P4,"b. Web applications and APIs (e.g., personal portfolio website)","b. Blueprints, c. Config, g. Sansio","c. To configure the Flask application, initialize routes, and start the server., d. To act as the central entry point for the application.","c. Middleware is a required component of the APP core, and applications cannot function without it., d. The APP core provides the foundation for CLI commands to interact with application configurations.","a. The Config Module provides configuration settings that the App Module uses to manage the application’s behavior., b. The App Module automatically loads configuration settings from the Config Module., c. The Config Module is required to initialize the App Module., e. The Config Module provides environment-based configurations that can be loaded into the App Module.","d. To allow reusable components to be shared across multiple applications., e. To enable developers to define and group related routes and views.","d. The App Module can register multiple Blueprints to handle different routes and functionality., e. The App Module depends on the Blueprint Module for basic request and response handling.","a. To add the Blueprint's routes and resources to the main Flask application., c. To connect the Blueprint to the App Module, allowing its functionality to be integrated into the application., e. To associate static files and templates specific to the Blueprint with the application.","a. To determine the maximum age (in seconds) for static files before they are cached., c. To customize the cache duration for static files specific to a Blueprint., d. To override the default cache duration defined by the App Module."
P5,"b. Web applications and APIs (e.g., personal portfolio website)","a. JSON Handling, b. Blueprints, c. Config, g. Sansio","c. To configure the Flask application, initialize routes, and start the server., d. To act as the central entry point for the application.","b. The APP core uses Sans-I/O to handle HTTP request routing and responses., d. The APP core provides the foundation for CLI commands to interact with application configurations.","a. The Config Module provides configuration settings that the App Module uses to manage the application’s behavior., b. The App Module automatically loads configuration settings from the Config Module., e. The Config Module provides environment-based configurations that can be loaded into the App Module.","b. To enable modular organization of application functionality, such as routes and templates., d. To allow reusable components to be shared across multiple applications., e. To enable developers to define and group related routes and views.","b. The Blueprint Module allows the App Module to organize application functionality into smaller, modular components., d. The App Module can register multiple Blueprints to handle different routes and functionality.","a. To add the Blueprint's routes and resources to the main Flask application., c. To connect the Blueprint to the App Module, allowing its functionality to be integrated into the application., e. To associate static files and templates specific to the Blueprint with the application.","a. To determine the maximum age (in seconds) for static files before they are cached., b. To set a global cache-control header for all static files served by the application."
P6,"b. Web applications and APIs (e.g., personal portfolio website)","a. JSON Handling, b. Blueprints, c. Config, g. Sansio","c. To configure the Flask application, initialize routes, and start the server., d. To act as the central entry point for the application.",b. The APP core uses Sans-I/O to handle HTTP request routing and responses.,"a. The Config Module provides configuration settings that the App Module uses to manage the application’s behavior., b. The App Module automatically loads configuration settings from the Config Module., d. The App Module uses the config object to access application-specific settings, such as DEBUG or SECRET_KEY., e. The Config Module provides environment-based configurations that can be loaded into the App Module.","b. To enable modular organization of application functionality, such as routes and templates., c. To replace the App Module as the central entry point for the Flask application., d. To allow reusable components to be shared across multiple applications., e. To enable developers to define and group related routes and views.","a. The App Module is required to define and register a Blueprint Module., b. The Blueprint Module allows the App Module to organize application functionality into smaller, modular components., d. The App Module can register multiple Blueprints to handle different routes and functionality.","a. To add the Blueprint's routes and resources to the main Flask application., c. To connect the Blueprint to the App Module, allowing its functionality to be integrated into the application., d. To register extensions, such as SQLAlchemy or Flask-Migrate, within the Blueprint.",a. To determine the maximum age (in seconds) for static files before they are cached.
P7,"c. Machine learning pipelines (e.g., model deployment interface)","a. JSON Handling, b. Blueprints, c. Config, g. Sansio","a. To store all static files used in the project., b. To define the database schema and relationships for the application., c. To configure the Flask application, initialize routes, and start the server., d. To act as the central entry point for the application.","b. The APP core uses Sans-I/O to handle HTTP request routing and responses., d. The APP core provides the foundation for CLI commands to interact with application configurations.","b. The App Module automatically loads configuration settings from the Config Module., c. The Config Module is required to initialize the App Module., d. The App Module uses the config object to access application-specific settings, such as DEBUG or SECRET_KEY., e. The Config Module provides environment-based configurations that can be loaded into the App Module.",h. I don’t know.,g. I don’t know.,g. I don’t know.,g. I don’t know.
P8,"b. Web applications and APIs (e.g., personal portfolio website)","a. JSON Handling, b. Blueprints, c. Config, g. Sansio",d. To act as the central entry point for the application.,a. The APP core requires developers to manually implement JSON handling since it lacks a built-in provider.,"a. The Config Module provides configuration settings that the App Module uses to manage the application’s behavior., e. The Config Module provides environment-based configurations that can be loaded into the App Module.","b. To enable modular organization of application functionality, such as routes and templates., d. To allow reusable components to be shared across multiple applications.","a. The App Module is required to define and register a Blueprint Module., b. The Blueprint Module allows the App Module to organize application functionality into smaller, modular components.",,
P9,"b. Web applications and APIs (e.g., personal portfolio website)","a. JSON Handling, b. Blueprints, c. Config, f. HTTP, g. Sansio",d. To act as the central entry point for the application.,f. I don’t know,h. I don’t know.,"b. To enable modular organization of application functionality, such as routes and templates., d. To allow reusable components to be shared across multiple applications., e. To enable developers to define and group related routes and views., f. To enhance security by validating incoming requests.","b. The Blueprint Module allows the App Module to organize application functionality into smaller, modular components., d. The App Module can register multiple Blueprints to handle different routes and functionality.","a. To add the Blueprint's routes and resources to the main Flask application., c. To connect the Blueprint to the App Module, allowing its functionality to be integrated into the application., e. To associate static files and templates specific to the Blueprint with the application.",a. To determine the maximum age (in seconds) for static files before they are cached.
P10,"b. Web applications and APIs (e.g., personal portfolio website)","a. JSON Handling, b. Blueprints, c. Config, g. Sansio","c. To configure the Flask application, initialize routes, and start the server., d. To act as the central entry point for the application.","a. The APP core requires developers to manually implement JSON handling since it lacks a built-in provider., b. The APP core uses Sans-I/O to handle HTTP request routing and responses., d. The APP core provides the foundation for CLI commands to interact with application configurations.","b. The App Module automatically loads configuration settings from the Config Module., c. The Config Module is required to initialize the App Module., d. The App Module uses the config object to access application-specific settings, such as DEBUG or SECRET_KEY., e. The Config Module provides environment-based configurations that can be loaded into the App Module.","b. To enable modular organization of application functionality, such as routes and templates., e. To enable developers to define and group related routes and views.","b. The Blueprint Module allows the App Module to organize application functionality into smaller, modular components., d. The App Module can register multiple Blueprints to handle different routes and functionality.",a. To add the Blueprint's routes and resources to the main Flask application.,"a. To determine the maximum age (in seconds) for static files before they are cached., d. To override the default cache duration defined by the App Module."